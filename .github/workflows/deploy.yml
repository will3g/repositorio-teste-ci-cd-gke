name: Deploy to GKE

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

    - name: Build and Push Images
      run: |
        cd app
        docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.STREAMLIT_IMAGE }}:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.STREAMLIT_IMAGE }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        install_components: kubectl

    - name: Get GKE credentials
      run: |
        gcloud container clusters get-credentials ${{ secrets.GCP_CLUSTER_NAME }} --zone ${{ secrets.GCP_ZONE }}

    - name: Generate Manifest to streamlit application
      run: |
        ./generate-manifest.sh ${{ secrets.DOCKER_USERNAME }} ${{ secrets.STREAMLIT_IMAGE }} streamlit 8080 streamlit-deployment.yml

    - name: Deploy to GKE
      run: |
        kubectl apply -f streamlit-deployment.yml

  notify_devops_team:
    runs-on: ubuntu-latest
    needs: [build_and_push, deploy]
    steps:
    - name: Notify DevOps team
      run: |
        curl -X POST -H 'Content-type: application/json' --data '{"text":"New Docker image deployed to GKE!"}' ${{ secrets.WEBHOOK_URL }}
